import {
    ButtonBuilder,
    ButtonStyle,
    Client,
    Colors,
    Guild,
    Interaction,
    InteractionType,
    NewsChannel,
    TextChannel,
    User,
} from 'discord.js';
import { Logger } from 'log4js';
import { Connection } from 'mysql';
import { config } from 'node-config-ts';
import { v4 } from 'uuid';
import { ReportBase } from '../@types/types';
import { Controller } from '../lib/Controller';
import {
    createDMessage,
    createLogEmbed,
    createStatusEmbed,
} from '../lib/EmbedMaker';

module.exports = {
    id: 'report',
    permission: 'everyone',
    disable: false,
    execute: async function (
        client: Client,
        args: Array<any>,
        log: Logger,
        interaction: Interaction,
        db: Connection
    ) {
        const guild: Guild = interaction.guild!;
        const author: User = interaction.user;

        const reportCh = guild.channels.cache.find(
            (channel) => channel.id === config.reportChannelId
        )!;
        const logCh = guild.channels.cache.find(
            (channel) => channel.id === config.logChannelId
        )!;
        if (
            !(
                reportCh instanceof TextChannel ||
                reportCh instanceof NewsChannel
            ) ||
            !(logCh instanceof TextChannel)
        ) {
            return;
        }

        const controller = new Controller(db, log);

        if (interaction.type !== InteractionType.ApplicationCommand) return;

        await interaction.deferReply({
            ephemeral: true,
        });

        await interaction.editReply({
            embeds: [
                {
                    title: '<a:pending:1010737929192226846> Â†±Âëä„ÇíÂá¶ÁêÜ‰∏≠„Åß„Åô‚Ä¶',
                    color: Colors.Blurple,
                    footer: {
                        text: `Krunker.ioÊó•Êú¨ÂÖ¨Âºè‰∫§ÊµÅDiscord`,
                        icon_url:
                            'https://media.discordapp.net/attachments/789856068649615390/810124789934850098/KrunkerJP.png',
                    },
                },
            ],
        });

        const reportBase: ReportBase = {
            report_uuid: v4(),
            player_ign: interaction.options.get('id')?.value?.toString() || '',
            video_url: interaction.options.get('url')?.value?.toString() || '',
            status_id: 'pending',
            reporter_id: interaction.user.id,
            reporter_message:
                interaction.options.get('message')?.value?.toString() ?? '',
        };

        if (reportBase.reporter_message.length > 100) {
            await interaction.editReply({
                embeds: [
                    {
                        title: `‚ùó „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü`,
                        color: Colors.Red,
                        description:
                            '100ÊñáÂ≠ó„ÇíË∂Ö„Åà„Çã`message`„ÅØ„Åä‰Ωø„ÅÑ„ÅÑ„Åü„Å†„Åë„Åæ„Åõ„Çì„ÄÇ„ÅäÊâãÊï∞„Çí„Åä„Åã„Åë„Åó„Åæ„Åô„Åå„ÄÅ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n„Åì„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅØ10ÁßíÂæå„Å´Ëá™Âãï„ÅßÂâäÈô§„Åï„Çå„Åæ„Åô„ÄÇ',
                        footer: {
                            text: `Krunker.ioÊó•Êú¨ÂÖ¨Âºè‰∫§ÊµÅDiscord`,
                            icon_url:
                                'https://media.discordapp.net/attachments/789856068649615390/810124789934850098/KrunkerJP.png',
                        },
                    },
                ],
            });
            return;
        }

        if (
            !/^(https:\/\/)?(www\.)?(youtube\.com\/watch\?v=|youtu\.be\/)+[\S]{11}(&t=[0-9]+s)?$/.test(
                reportBase.video_url
            ) &&
            !/^(https:\/\/)?(www\.)?streamable\.com\/.+$/.test(
                reportBase.video_url
            )
        ) {
            await interaction.editReply({
                embeds: [
                    {
                        title: `‚ùó „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü`,
                        color: Colors.Red,
                        description: `URL„ÅåÁÑ°Âäπ„Åß„Åô: ${reportBase.video_url}\n‰ΩøÁî®ÂèØËÉΩ„Å™ÂãïÁîªÂÖ±Êúâ„Çµ„Éº„Éì„Çπ„ÅØYouTube„Å®Streamable„ÅÆ„Åø„Åß„Åô„ÄÇ`,
                        footer: {
                            text: `Krunker.ioÊó•Êú¨ÂÖ¨Âºè‰∫§ÊµÅDiscord`,
                            icon_url:
                                'https://media.discordapp.net/attachments/789856068649615390/810124789934850098/KrunkerJP.png',
                        },
                    },
                ],
            });
            return;
        }

        const statusMessage = await reportCh.send({
            embeds: [createStatusEmbed(reportBase)],
        });

        const buttons = [
            new ButtonBuilder()
                .setCustomId(`kpd_${reportBase.report_uuid}_banned`)
                .setStyle(ButtonStyle.Success)
                .setLabel('BAN')
                .setEmoji('üî®'),
            new ButtonBuilder()
                .setCustomId(`kpd_${reportBase.report_uuid}_denied`)
                .setStyle(ButtonStyle.Danger)
                .setLabel('Âç¥‰∏ã')
                .setEmoji('‚õî'),
            new ButtonBuilder()
                .setCustomId(`kpd_${reportBase.report_uuid}_reopen`)
                .setStyle(ButtonStyle.Secondary)
                .setLabel('ÂÜç„Ç™„Éº„Éó„É≥')
                .setEmoji('‚Ü©Ô∏è')
                .setDisabled(true),
        ];

        const logMessage = await logCh.send({
            embeds: [createLogEmbed(reportBase)],
            components: [
                {
                    type: 1,
                    components: buttons,
                },
            ],
        });

        reportBase.log_message_id = logMessage.id;
        reportBase.status_message_id = statusMessage.id;

        try {
            await controller.insertReport(reportBase);
        } catch (error) {
            log.error(error);
            await interaction.editReply({
                embeds: [
                    {
                        title: `‚ùó „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü`,
                        color: Colors.Red,
                        description:
                            '„Éá„Éº„Çø„Éô„Éº„Çπ„Å∏„ÅÆÊõ∏„ÅçËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„ÅäÊâãÊï∞„Çí„Åä„Åã„Åë„Åó„Åæ„Åô„Åå„ÄÅ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÇÑ„ÇäÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n„Åì„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅØ10ÁßíÂæå„Å´Ëá™Âãï„ÅßÂâäÈô§„Åï„Çå„Åæ„Åô„ÄÇ',
                        footer: {
                            text: `Krunker.ioÊó•Êú¨ÂÖ¨Âºè‰∫§ÊµÅDiscord`,
                            icon_url:
                                'https://media.discordapp.net/attachments/789856068649615390/810124789934850098/KrunkerJP.png',
                        },
                    },
                ],
            });
            setTimeout(async () => {
                await statusMessage.delete();
            }, 10 * 1000);
        }

        const report = await controller.getReport(
            'report_uuid',
            reportBase.report_uuid
        );

        logMessage.edit({
            embeds: [createLogEmbed(report)],
            components: [
                {
                    type: 1,
                    components: buttons,
                },
            ],
        });

        statusMessage.edit({
            embeds: [createStatusEmbed(report)],
        });

        author.send(createDMessage(report));

        await interaction.editReply({
            embeds: [
                {
                    title: `‚úÖ Â†±Âëä„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü`,
                    color: Colors.Green,
                    footer: {
                        text: `Krunker.ioÊó•Êú¨ÂÖ¨Âºè‰∫§ÊµÅDiscord`,
                        icon_url:
                            'https://media.discordapp.net/attachments/789856068649615390/810124789934850098/KrunkerJP.png',
                    },
                },
            ],
        });

        return;
    },
};
